#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#define MAX 100

int stack[MAX];
int top = -1;
void print(){
    if(top==-1){
        printf("\nStack Underflow ");
        return;
    }
    printf("\n");
    for(int i=0;i<top;i++){
        printf("%d | ",stack[i]);
    }
    printf("%d (top)\n",stack[top]);
}
int isFull() {
    return top == MAX - 1;
}

int isEmpty() {
    return top == -1;
}

void push(int item) {
    if (isFull()) {
        printf("Stack Overflow\n");
        return;
    }
    top++;
    stack[top] = item;
    printf("%d pushed to stack\n", item);
    print();
}

int pop() {
    if (isEmpty()) {
        printf("Stack Underflow\n");
        return INT_MIN;
    }
    top--;
    printf("%d is popped",stack[top+1]); print();
    return stack[top+1];
}

int peek() {
    if (isEmpty()) {
        printf("Stack is empty\n");
        return INT_MIN;
    }
    printf("\npeek element is %d .",stack[top]);
    return stack[top];
}

int main() {
    printf("Enter the Stack operation :");
    int choice=0;
    printf("\n1 . push\n2 . pop\n3 . is full\n4 . is empty\n5 . peek\n6 . exit");
    while(choice!=6){
    printf("\nCHOOSE : ");
    scanf("%d",&choice);
    switch(choice){
        case 1:
           int x;
           printf("Enter the element :");
           scanf("%d",&x);
           push(x);
           break;
        case 2:
           pop();
           break;
        case 3:
          isFull()?printf("Stack is full"):printf("Stack is not full");
          break;
        case 4:
           isEmpty()?printf("Stack is empty"):printf("Stack is not empty");
          break;
        case 5:
            peek(); break;
        case 6:
           printf("\nExit Session......"); break;
        default:
           printf("\nEnter Valid operation !");
        
    }
    }
    return 0;
}
